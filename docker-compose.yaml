services:
  php:
    image: ${IMAGES_PREFIX:-}app-php
    restart: unless-stopped
    environment:
      SERVER_NAME: ${SERVER_NAME:-localhost}, php:80
      MERCURE_PUBLISHER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      MERCURE_SUBSCRIBER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      TRUSTED_PROXIES: ${TRUSTED_PROXIES:-127.0.0.0/8,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16}
      TRUSTED_HOSTS: ^${SERVER_NAME:-example\.com|localhost}|php$$
      # Run "composer require symfony/orm-pack" to install and configure Doctrine ORM
      DATABASE_URL: postgresql://${POSTGRES_USER:-root}:${POSTGRES_PASSWORD:-master}@database:5432/${POSTGRES_DB:-db-users}?serverVersion=${POSTGRES_VERSION:-15}&charset=${POSTGRES_CHARSET:-utf8}
      # Run "composer require symfony/mercure-bundle" to install and configure the Mercure integration
      MERCURE_URL: ${CADDY_MERCURE_URL:-http://php/.well-known/mercure}
      MERCURE_PUBLIC_URL: https://${SERVER_NAME:-localhost}/.well-known/mercure
      MERCURE_JWT_SECRET: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      # The two next lines can be removed after initial installation
      SYMFONY_VERSION: ${SYMFONY_VERSION:-}
      STABILITY: ${STABILITY:-stable}

    ports:
      # HTTP
      - target: 80
        published: ${HTTP_PORT:-80}
        protocol: tcp
      # HTTPS
      - target: 443
        published: ${HTTPS_PORT:-443}
        protocol: tcp
      # HTTP/3
      - target: 443
        published: ${HTTP3_PORT:-443}
        protocol: udp

  database-users:
    image: postgres:latest
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-db-users}
      POSTGRES_USER: ${POSTGRES_USER:-root}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-master}
    volumes:
      - ./docker/db/data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
#    networks:
#      - my-network

#  database-erp:
#    image: postgres:latest
#    environment:
#      POSTGRES_DB: db-erp
#      POSTGRES_USER: root
#      POSTGRES_PASSWORD: master
#    volumes:
#      - ./docker/db/data:/var/lib/postgresql/data
#    ports:
#      - "5433:5432"
#
#  database-products:
#    image: postgres:latest
#    environment:
#      POSTGRES_DB: db-products
#      POSTGRES_USER: root
#      POSTGRES_PASSWORD: master
#    volumes:
#      - ./docker/db/data:/var/lib/postgresql/data
#    ports:
#      - "5434:5432"
#
#  database-reviews:
#    image: postgres:latest
#    environment:
#      POSTGRES_DB: db-reviews
#      POSTGRES_USER: root
#      POSTGRES_PASSWORD: master
#    volumes:
#      - ./docker/db/data:/var/lib/postgresql/data
#    ports:
#      - "5435:5432"
#
#  database-orders:
#    image: postgres:latest
#    environment:
#      POSTGRES_DB: db-orders
#      POSTGRES_USER: root
#      POSTGRES_PASSWORD: master
#    volumes:
#      - ./docker/db/data:/var/lib/postgresql/data
#    ports:
#      - "5436:5432"
#
#  database-promotions:
#    image: postgres:latest
#    environment:
#      POSTGRES_DB: db-promotions
#      POSTGRES_USER: root
#      POSTGRES_PASSWORD: master
#    volumes:
#      - ./docker/db/data:/var/lib/postgresql/data
#    ports:
#      - "5437:5432"



networks:
  my-network:
    driver: bridge